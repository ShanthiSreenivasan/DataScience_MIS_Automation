(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
LK_lender_MIS$Remark <- ifelse(is.na(LK_lender_MIS$Remark), LK_lender_MIS$New_appops_status, LK_lender_MIS$Remark)
LK_lender_MIS$Upload_Remarks <- paste(LK_lender_MIS$Status,'-',LK_lender_MIS$customer_status_name)
colnames(LK_lender_MIS)[which(names(LK_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(LK_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_LK_FB_File.xlsx")
LK_upload<-LK_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
LK_upload<- LK_upload %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=LK_upload$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=LK_upload$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(LK_upload, file = "C:\\R\\Lender Feedback\\Output\\LK_upload.xlsx")
#################################
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
INDIFI_lender_MIS<- read.csv("C:\\R\\Lender Feedback\\Input\\INDIFI.csv")
names(INDIFI_lender_MIS)
INDIFI_lender_MIS<- read.csv("C:\\R\\Lender Feedback\\Input\\INDIFI.csv") %>% select(phone,state,applied_amount,rejection_reason)
appos_map_INDIFI <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'INDIFI')
INDIFI_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('INDIFI',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
INDIFI_lender_MIS$phone <- as.numeric(INDIFI_lender_MIS$phone)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "phone")] <- "mobile_number"
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "state")] <- "customer_status_name"
#INDIFI_appos_dump$ph_no<-INDIFI_lender_MIS$mobile_number[match(INDIFI_appos_dump$phone_home, INDIFI_lender_MIS$mobile_number)]
INDIFI_lender_MIS$offer_application_number<-INDIFI_appos_dump$offer_application_number[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$CURRENT_appops_status<-INDIFI_appos_dump$appops_status_code[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$New_appops_status<-appos_map_INDIFI$New_Status[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS$NEW_appops_description<-appos_map_INDIFI$Status_Description[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS <-INDIFI_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
is.na(offer_application_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
INDIFI_lender_MIS$Remark <- ifelse(is.na(INDIFI_lender_MIS$Remark), INDIFI_lender_MIS$New_appops_status, INDIFI_lender_MIS$Remark)
INDIFI_lender_MIS$Upload_Remarks <- paste(INDIFI_lender_MIS$customer_status_name,"-",INDIFI_lender_MIS$rejection_reason)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(INDIFI_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_INDIFI_FB_File.xlsx")
INDIFI_upload_1<-INDIFI_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
INDIFI_upload_1<- INDIFI_upload_1 %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=INDIFI_upload_1$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=INDIFI_upload_1$Upload_Remarks,`Offer_Reference_Number`='',`Loan_Sanctioned_Disbursed_Amount`='',`Booking_Date`='',`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(INDIFI_upload_1, file = "C:\\R\\Lender Feedback\\Output\\INDIFI_upload.xlsx")
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
INDIFI_lender_MIS<- read.csv("C:\\R\\Lender Feedback\\Input\\INDIFI.csv") %>% select(phone,state,applied_amount,rejection_reason)
names(INDIFI_lender_MIS)
appos_map_INDIFI <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'INDIFI')
INDIFI_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('INDIFI',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
########################INDIFI LenderFeedBack
INDIFI_lender_MIS$phone <- as.numeric(INDIFI_lender_MIS$phone)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "phone")] <- "mobile_number"
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "state")] <- "customer_status_name"
#INDIFI_appos_dump$ph_no<-INDIFI_lender_MIS$mobile_number[match(INDIFI_appos_dump$phone_home, INDIFI_lender_MIS$mobile_number)]
INDIFI_lender_MIS$offer_application_number<-INDIFI_appos_dump$offer_application_number[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$CURRENT_appops_status<-INDIFI_appos_dump$appops_status_code[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$New_appops_status<-appos_map_INDIFI$New_Status[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS$NEW_appops_description<-appos_map_INDIFI$Status_Description[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS <-INDIFI_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
is.na(offer_application_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
INDIFI_lender_MIS$Remark <- ifelse(is.na(INDIFI_lender_MIS$Remark), INDIFI_lender_MIS$New_appops_status, INDIFI_lender_MIS$Remark)
INDIFI_lender_MIS$Upload_Remarks <- paste(INDIFI_lender_MIS$customer_status_name,"-",INDIFI_lender_MIS$rejection_reason)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(INDIFI_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_INDIFI_FB_File.xlsx")
INDIFI_upload_1<-INDIFI_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
INDIFI_upload_1<- INDIFI_upload_1 %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=INDIFI_upload_1$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=INDIFI_upload_1$Upload_Remarks,`Offer_Reference_Number`='',`Loan_Sanctioned_Disbursed_Amount`='',`Booking_Date`='',`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(INDIFI_upload_1, file = "C:\\R\\Lender Feedback\\Output\\INDIFI_upload.xlsx")
View(INDIFI_lender_MIS)
INDIFI_lender_MIS<- read.csv("C:\\R\\Lender Feedback\\Input\\INDIFI.csv") %>% select(phone,state,applied_amount,rejection_reason)
INDIFI_lender_MIS<- read.xlsx("C:\\R\\Lender Feedback\\Input\\INDIFI.xlsx") %>% select(phone,state,applied_amount,rejection_reason)
appos_map_INDIFI <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'INDIFI')
INDIFI_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('INDIFI',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
########################INDIFI LenderFeedBack
INDIFI_lender_MIS$phone <- as.numeric(INDIFI_lender_MIS$phone)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "phone")] <- "mobile_number"
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "state")] <- "customer_status_name"
#INDIFI_appos_dump$ph_no<-INDIFI_lender_MIS$mobile_number[match(INDIFI_appos_dump$phone_home, INDIFI_lender_MIS$mobile_number)]
INDIFI_lender_MIS$offer_application_number<-INDIFI_appos_dump$offer_application_number[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$CURRENT_appops_status<-INDIFI_appos_dump$appops_status_code[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$New_appops_status<-appos_map_INDIFI$New_Status[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS$NEW_appops_description<-appos_map_INDIFI$Status_Description[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS <-INDIFI_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
is.na(offer_application_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
INDIFI_lender_MIS$Remark <- ifelse(is.na(INDIFI_lender_MIS$Remark), INDIFI_lender_MIS$New_appops_status, INDIFI_lender_MIS$Remark)
INDIFI_lender_MIS$Upload_Remarks <- paste(INDIFI_lender_MIS$customer_status_name,"-",INDIFI_lender_MIS$rejection_reason)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(INDIFI_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_INDIFI_FB_File.xlsx")
INDIFI_upload_1<-INDIFI_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
INDIFI_upload_1<- INDIFI_upload_1 %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=INDIFI_upload_1$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=INDIFI_upload_1$Upload_Remarks,`Offer_Reference_Number`='',`Loan_Sanctioned_Disbursed_Amount`='',`Booking_Date`='',`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(INDIFI_upload_1, file = "C:\\R\\Lender Feedback\\Output\\INDIFI_upload.xlsx")
appos_map_INDIFI <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'INDIFI')
INDIFI_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('INDIFI',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
########################INDIFI LenderFeedBack
INDIFI_lender_MIS$phone <- as.numeric(INDIFI_lender_MIS$phone)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "phone")] <- "mobile_number"
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "state")] <- "customer_status_name"
#INDIFI_appos_dump$ph_no<-INDIFI_lender_MIS$mobile_number[match(INDIFI_appos_dump$phone_home, INDIFI_lender_MIS$mobile_number)]
INDIFI_lender_MIS$offer_application_number<-INDIFI_appos_dump$offer_application_number[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$CURRENT_appops_status<-INDIFI_appos_dump$appops_status_code[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$New_appops_status<-appos_map_INDIFI$New_Status[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS$NEW_appops_description<-appos_map_INDIFI$Status_Description[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS <-INDIFI_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
is.na(offer_application_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
INDIFI_lender_MIS$Remark <- ifelse(is.na(INDIFI_lender_MIS$Remark), INDIFI_lender_MIS$New_appops_status, INDIFI_lender_MIS$Remark)
INDIFI_lender_MIS$Upload_Remarks <- paste(INDIFI_lender_MIS$customer_status_name,"-",INDIFI_lender_MIS$rejection_reason)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(INDIFI_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_INDIFI_FB_File.xlsx")
INDIFI_upload_1<-INDIFI_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
INDIFI_upload_1<- INDIFI_upload_1 %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=INDIFI_upload_1$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=INDIFI_upload_1$Upload_Remarks,`Offer_Reference_Number`='',`Loan_Sanctioned_Disbursed_Amount`='',`Booking_Date`='',`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(INDIFI_upload_1, file = "C:\\R\\Lender Feedback\\Output\\INDIFI_upload.xlsx")
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
INDIFI_lender_MIS<- read.xlsx("C:\\R\\Lender Feedback\\Input\\INDIFI.xlsx") %>% select(phone,state,applied_amount,rejection_reason)
View(INDIFI_lender_MIS)
appos_map_INDIFI <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'INDIFI')
INDIFI_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('INDIFI',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
########################INDIFI LenderFeedBack
INDIFI_lender_MIS$phone <- as.numeric(INDIFI_lender_MIS$phone)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "phone")] <- "mobile_number"
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "state")] <- "customer_status_name"
#INDIFI_appos_dump$ph_no<-INDIFI_lender_MIS$mobile_number[match(INDIFI_appos_dump$phone_home, INDIFI_lender_MIS$mobile_number)]
INDIFI_lender_MIS$offer_application_number<-INDIFI_appos_dump$offer_application_number[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$CURRENT_appops_status<-INDIFI_appos_dump$appops_status_code[match(INDIFI_lender_MIS$mobile_number, INDIFI_appos_dump$phone_home)]
INDIFI_lender_MIS$New_appops_status<-appos_map_INDIFI$New_Status[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS$NEW_appops_description<-appos_map_INDIFI$Status_Description[match(INDIFI_lender_MIS$customer_status_name, appos_map_INDIFI$CM_Status)]
INDIFI_lender_MIS <-INDIFI_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
is.na(offer_application_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
INDIFI_lender_MIS$Remark <- ifelse(is.na(INDIFI_lender_MIS$Remark), INDIFI_lender_MIS$New_appops_status, INDIFI_lender_MIS$Remark)
INDIFI_lender_MIS$Upload_Remarks <- paste(INDIFI_lender_MIS$customer_status_name,"-",INDIFI_lender_MIS$rejection_reason)
colnames(INDIFI_lender_MIS)[which(names(INDIFI_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(INDIFI_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_INDIFI_FB_File.xlsx")
INDIFI_upload_1<-INDIFI_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
INDIFI_upload_1<- INDIFI_upload_1 %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=INDIFI_upload_1$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=INDIFI_upload_1$Upload_Remarks,`Offer_Reference_Number`='',`Loan_Sanctioned_Disbursed_Amount`='',`Booking_Date`='',`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(INDIFI_upload_1, file = "C:\\R\\Lender Feedback\\Output\\INDIFI_upload.xlsx")
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
ES_lender_MIS <- read.xlsx("C:\\R\\Lender Feedback\\Input\\ES.xlsx") %>% select(mobile_number,status,subs_status,rejectreasonsgroup,app_download_flag,first_disb_loan_amt)
names(ES_lender_MIS)
appos_map_ES <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'EarlySalary')
ES_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('Early',name,ignore.case=TRUE)) %>% select(phone_home,offer_application_number,status,name,appops_status_code)
########################ES LenderFeedBack
colnames(ES_lender_MIS)[which(names(ES_lender_MIS) == "subs_status")] <- "customer_status_name"
ES_lender_MIS$mobile_number <- as.numeric(ES_lender_MIS$mobile_number)
ES_lender_MIS$offer_application_number<-ES_appos_dump$offer_application_number[match(ES_lender_MIS$mobile_number, ES_appos_dump$phone_home)]
ES_lender_MIS$CURRENT_appops_status<-ES_appos_dump$appops_status_code[match(ES_lender_MIS$mobile_number, ES_appos_dump$phone_home)]
ES_lender_MIS$New_appops_status<-appos_map_ES$New_Status[match(ES_lender_MIS$customer_status_name, appos_map_ES$CM_Status)]
ES_lender_MIS$NEW_appops_description<-appos_map_ES$Status_Description[match(ES_lender_MIS$customer_status_name, appos_map_ES$CM_Status)]
names(ES_lender_MIS)
ES_lender_MIS <-ES_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
is.na(offer_application_number) ~ 'Not in CRM',
app_download_flag==0 & New_appops_status<=390 ~ '390',
app_download_flag==1 & New_appops_status<=399 ~ '399',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
ES_lender_MIS$Remark <- ifelse(is.na(ES_lender_MIS$Remark), ES_lender_MIS$New_appops_status, ES_lender_MIS$Remark)
ES_Not_in_CRM_cases <- ES_appos_dump %>% filter(is.na(phone_home))
ES_lender_MIS$Upload_Remarks <- paste(ES_lender_MIS$customer_status_name,'-',ES_lender_MIS$rejectreasonsgroup,'-',ES_lender_MIS$NEW_appops_description)
colnames(ES_lender_MIS)[which(names(ES_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(ES_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_ES_FB_File.xlsx")
ES_upload<-ES_lender_MIS %>% filter(!is.na(offer_application_number) & !is.na(Remark))
ES_upload<- ES_upload %>% filter(!Remark %in% c('Repeated_Feedback_cases','Not in CRM')) %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=ES_lender_MIS$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=ES_lender_MIS$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(ES_upload, file = "C:\\R\\Lender Feedback\\Output\\ES_upload.xlsx")
#################################
write.xlsx(ES_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_ES_FB_File.xlsx")
ES_upload<-ES_lender_MIS %>% filter(!is.na(offer_application_number) & !is.na(Remark))
ES_upload<- ES_upload %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=ES_upload$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=ES_upload$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(ES_upload, file = "C:\\R\\Lender Feedback\\Output\\ES_upload.xlsx")
#################################
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
ES_lender_MIS <- read.xlsx("C:\\R\\Lender Feedback\\Input\\ES.xlsx") %>% select(mobile_number,status,subs_status,rejectreasonsgroup,app_download_flag,first_disb_loan_amt)
names(ES_lender_MIS)
appos_map_ES <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'EarlySalary')
ES_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('Early',name,ignore.case=TRUE)) %>% select(phone_home,offer_application_number,status,name,appops_status_code)
########################ES LenderFeedBack
colnames(ES_lender_MIS)[which(names(ES_lender_MIS) == "subs_status")] <- "customer_status_name"
ES_lender_MIS$mobile_number <- as.numeric(ES_lender_MIS$mobile_number)
ES_lender_MIS$offer_application_number<-ES_appos_dump$offer_application_number[match(ES_lender_MIS$mobile_number, ES_appos_dump$phone_home)]
ES_lender_MIS$CURRENT_appops_status<-ES_appos_dump$appops_status_code[match(ES_lender_MIS$mobile_number, ES_appos_dump$phone_home)]
ES_lender_MIS$New_appops_status<-appos_map_ES$New_Status[match(ES_lender_MIS$customer_status_name, appos_map_ES$CM_Status)]
ES_lender_MIS$NEW_appops_description<-appos_map_ES$Status_Description[match(ES_lender_MIS$customer_status_name, appos_map_ES$CM_Status)]
names(ES_lender_MIS)
ES_lender_MIS <-ES_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
(New_appops_status ==990) ~ '990',
is.na(offer_application_number) ~ 'Not in CRM',
app_download_flag==0 & New_appops_status<=390 ~ '390',
app_download_flag==1 & New_appops_status<=399 ~ '399',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
ES_lender_MIS$Remark <- ifelse(is.na(ES_lender_MIS$Remark), ES_lender_MIS$New_appops_status, ES_lender_MIS$Remark)
ES_Not_in_CRM_cases <- ES_appos_dump %>% filter(is.na(phone_home))
ES_lender_MIS$Upload_Remarks <- paste(ES_lender_MIS$customer_status_name,'-',ES_lender_MIS$rejectreasonsgroup,'-',ES_lender_MIS$NEW_appops_description)
colnames(ES_lender_MIS)[which(names(ES_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(ES_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_ES_FB_File.xlsx")
ES_upload<-ES_lender_MIS %>% filter(!is.na(offer_application_number) & !is.na(Remark))
ES_upload<- ES_upload %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=ES_upload$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=ES_upload$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(ES_upload, file = "C:\\R\\Lender Feedback\\Output\\ES_upload.xlsx")
#################################
colnames(ES_lender_MIS)[which(names(ES_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(ES_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_ES_FB_File.xlsx")
ES_upload<-ES_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
ES_upload<- ES_upload %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=ES_upload$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=ES_upload$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(ES_upload, file = "C:\\R\\Lender Feedback\\Output\\ES_upload.xlsx")
#################################
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(xtable)
library(yaml)
library(openxlsx)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
Mdf1 <- read.xlsx("C:\\R\\Lender Feedback\\Input\\Muthoot.xlsx",sheet = 'aug') %>% select(Mobile.Number,Location.feedback,Final.status)
Mdf2 <- read.xlsx("C:\\R\\Lender Feedback\\Input\\Muthoot.xlsx",sheet = 'jun') %>% select(Mobile.Number,Location.feedback,Final.status)
Mdf3 <- read.xlsx("C:\\R\\Lender Feedback\\Input\\Muthoot.xlsx",sheet = 'july') %>% select(Mobile.Number,Location.feedback,Final.status)
mudf1<-Mdf3 %>% full_join(Mdf2)
mudf2<-mudf1 %>% full_join(Mdf1)
Muthoot_lender_MIS<-mudf2
appos_map_Muthoot <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'Muthootpl')
Muthoot_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('Muthoot',name,ignore.case=TRUE)) %>% select(phone_home,offer_application_number,status,name,appops_status_code)
########################Muthoot LenderFeedBack
colnames(Muthoot_lender_MIS)[which(names(Muthoot_lender_MIS) == "Mobile.Number")] <- "mobile_number"
colnames(Muthoot_lender_MIS)[which(names(Muthoot_lender_MIS) == "Final.status")] <- "customer_status_name"
Muthoot_lender_MIS$mobile_number <- as.numeric(Muthoot_lender_MIS$mobile_number)
Muthoot_lender_MIS$offer_application_number<-Muthoot_appos_dump$offer_application_number[match(Muthoot_lender_MIS$mobile_number, Muthoot_appos_dump$phone_home)]
Muthoot_lender_MIS$CURRENT_appops_status<-Muthoot_appos_dump$appops_status_code[match(Muthoot_lender_MIS$mobile_number, Muthoot_appos_dump$phone_home)]
Muthoot_lender_MIS$New_appops_status<-appos_map_Muthoot$New_Status[match(Muthoot_lender_MIS$customer_status_name, appos_map_Muthoot$CM_Status)]
Muthoot_lender_MIS$NEW_appops_description<-appos_map_Muthoot$Status_Description[match(Muthoot_lender_MIS$customer_status_name, appos_map_Muthoot$CM_Status)]
Muthoot_lender_MIS <-Muthoot_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not in CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
is.na(offer_application_number) ~ 'Not in CRM',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
Muthoot_lender_MIS$Remark <- ifelse(is.na(Muthoot_lender_MIS$Remark), Muthoot_lender_MIS$New_appops_status, Muthoot_lender_MIS$Remark)
Muthoot_lender_MIS$Upload_Remarks <- paste(Muthoot_lender_MIS$customer_status_name,'-',Muthoot_lender_MIS$NEW_appops_description)
colnames(Muthoot_lender_MIS)[which(names(Muthoot_lender_MIS) == "offer_application_number")] <- "Application_Number"
write.xlsx(Muthoot_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_Muthoot_FB_File.xlsx")
Muthoot_upload<-Muthoot_lender_MIS %>% filter(!Remark %in% c('Repeated_Feedback_cases', 'Not_in_CRM'), !is.na(Application_Number))
Muthoot_upload<- Muthoot_upload %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=Muthoot_upload$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=Muthoot_upload$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(Muthoot_upload, file = "C:\\R\\Lender Feedback\\Output\\Muthoot_upload.xlsx")
#################################
rm(list = ls())
library(magrittr)
library(tibble)
library(dplyr)
library(purrr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lubridate)
library(data.table)
library(DBI)
library(RPostgreSQL)
library(RMySQL)
library(logging)
#library(mailR)
library(xtable)
library(yaml)
library(openxlsx)
library(bit64)
library(purrr)
library(janitor)
setwd("C:\\R\\Lender Feedback")
getwd()
thisdate<-format(Sys.Date(),'%Y-%m-%d')
source('.\\Function file.R')
if(!dir.exists(paste("./Output/",thisdate,sep="")))
{
dir.create(paste("./Output/",thisdate,sep=""))
}
IDFC_lender_MIS<- read.xlsx("C:\\R\\Lender Feedback\\Input\\IDFC_CC.xlsx", sheet = "MASTER FILE") %>% select(CRM.Lead.Id,Applicant.Mobile,Stage,Sub.Stage,Stage.by.Integration.Status,FI.Curing.Reason)
appos_map_IDFC <- read.xlsx("C:\\R\\Lender Feedback\\Revised Referrals Mapping.xlsx",sheet = 'IDFC CC')
IDFC_appos_dump <- read.csv("C:\\R\\Lender Feedback\\Input\\appopsdump.csv") %>% filter(grepl('IDFC',name,ignore.case=TRUE)) %>% select(leadid,phone_home,offer_application_number,status,name,appops_status_code)
########################IDFC LenderFeedBack
colnames(IDFC_lender_MIS)[which(names(IDFC_lender_MIS) == "Applicant.Mobile")] <- "mobile_number"
colnames(IDFC_lender_MIS)[which(names(IDFC_lender_MIS) == "Sub.Stage")] <- "customer_status_name"
IDFC_lender_MIS$mobile_number <- as.numeric(IDFC_lender_MIS$mobile_number)
IDFC_lender_MIS$offer_application_number<-IDFC_appos_dump$offer_application_number[match(IDFC_lender_MIS$mobile_number, IDFC_appos_dump$phone_home)]
IDFC_lender_MIS$CURRENT_appops_status<-IDFC_appos_dump$appops_status_code[match(IDFC_lender_MIS$mobile_number, IDFC_appos_dump$phone_home)]
IDFC_lender_MIS$New_appops_status<-appos_map_IDFC$New_Status[match(IDFC_lender_MIS$customer_status_name, appos_map_IDFC$CM_Status)]
IDFC_lender_MIS$NEW_appops_description<-appos_map_IDFC$Status_Description[match(IDFC_lender_MIS$customer_status_name, appos_map_IDFC$CM_Status)]
names(IDFC_lender_MIS)
IDFC_lender_MIS <-IDFC_lender_MIS %>%
mutate(Remark = case_when(
#is.na(mobile_number) ~ 'Not_in_ CRM',
New_appops_status <= CURRENT_appops_status ~ 'Repeated_Feedback_cases',
is.na(offer_application_number) ~ 'Not_in_ CRM',
(New_appops_status ==990) ~ '990',
(New_appops_status ==380 & CURRENT_appops_status <380) ~ '380',
(New_appops_status ==480 & CURRENT_appops_status <480) ~ '480',
(New_appops_status ==580 & CURRENT_appops_status > 480) ~ '580'
))
IDFC_lender_MIS$Remark <- ifelse(is.na(IDFC_lender_MIS$Remark), IDFC_lender_MIS$New_appops_status, IDFC_lender_MIS$Remark)
#IDFC_lender_MIS<-IDFC_lender_MIS %>% filter(!is.na(offer_application_number) & !is.na(Remark))
IDFC_lender_MIS$Upload_Remarks <- paste(IDFC_lender_MIS$customer_status_name,'-',IDFC_lender_MIS$Stage.by.Integration.Status)
colnames(IDFC_lender_MIS)[which(names(IDFC_lender_MIS) == "offer_application_number")] <- "Application_Number"
IDFC_upload<- IDFC_lender_MIS %>% filter(!NEW_appops_description %in% c("Repeated_Feedback_cases", "Not_in_ CRM")) %>% select(Application_Number) %>%
mutate(`App_Ops_Status`=IDFC_lender_MIS$NEW_appops_description,`Bank_Feedback_Date`=thisdate,`Appointment_Date`="Nil",`Notes`=IDFC_lender_MIS$Upload_Remarks,`Offer_Reference_Number`="",`Loan_Sanctioned_Disbursed_Amount`="",`Booking_Date`="",`Rejection_Tag`="Nil",`Rejection_Category`="Nil")
write.xlsx(IDFC_lender_MIS, file = "C:\\R\\Lender Feedback\\Output\\Revised_IDFC_FB_File.xlsx")
write.xlsx(IDFC_upload, file = "C:\\R\\Lender Feedback\\Output\\IDFC_upload.xlsx")
#################################
